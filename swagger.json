{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenWT.Contact.Api",
    "version": "1.0"
  },
  "paths": {
    "/api/contacts": {
      "get": {
        "tags": [
          "ContactApi"
        ],
        "summary": "Retrieved all contacts",
        "operationId": "GetAllContact",
        "responses": {
          "200": {
            "description": "All contacts were retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContactApi"
        ],
        "summary": "Create a new contact",
        "operationId": "CreateContact",
        "requestBody": {
          "description": "The contact payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The contact was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDto"
                }
              }
            }
          },
          "400": {
            "description": "The contact data is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/contacts/{id}": {
      "get": {
        "tags": [
          "ContactApi"
        ],
        "summary": "Retrieve a contact",
        "operationId": "GetContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The contact was successfully retrieve",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDto"
                }
              }
            }
          },
          "404": {
            "description": "The contact to retrieve was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContactApi"
        ],
        "summary": "Delete a contact",
        "operationId": "DeleteContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The contact was deleted"
          },
          "404": {
            "description": "The contact to delete was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ContactApi"
        ],
        "summary": "Update a contact",
        "operationId": "UpdateContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated contact payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The contact was successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDto"
                }
              }
            }
          },
          "404": {
            "description": "The contact to update was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/contacts/{contactId}/skills": {
      "get": {
        "tags": [
          "ContactSkillApi"
        ],
        "summary": "Retrieved all contact's skills",
        "operationId": "GetAllContactSkill",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All skills of the contact were retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SkillDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContactSkillApi"
        ],
        "summary": "Add skill to contact",
        "operationId": "AddSkillContact",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Skill ids to add to contact",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "nullable": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Skills were successfully added to contact"
          },
          "400": {
            "description": "There is invalid data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContactSkillApi"
        ],
        "summary": "Delete a contact",
        "operationId": "DeleteContact",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Skill ids to add to contact",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "nullable": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The contact was deleted"
          },
          "404": {
            "description": "The contact to delete was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/identity": {
      "post": {
        "tags": [
          "Identity"
        ],
        "summary": "Create a new user",
        "operationId": "CreateUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All contacts were retrieved"
          }
        }
      }
    },
    "/api/identity/login": {
      "post": {
        "tags": [
          "Identity"
        ],
        "summary": "Login",
        "operationId": "Login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "All contacts were retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JwtDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/skills": {
      "get": {
        "tags": [
          "SkillApi"
        ],
        "summary": "Retrieved all skills",
        "operationId": "GetAllSkill",
        "responses": {
          "200": {
            "description": "All skills were retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SkillDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SkillApi"
        ],
        "summary": "Create a new skill",
        "operationId": "CreateSkill",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SkillDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SkillDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SkillDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The skill was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkillDto"
                }
              }
            }
          },
          "400": {
            "description": "The skill data is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/skills/{id}": {
      "get": {
        "tags": [
          "SkillApi"
        ],
        "summary": "Retrieve a skill",
        "operationId": "GetSkill",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The skill was successfully retrieve",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkillDto"
                }
              }
            }
          },
          "404": {
            "description": "The skill to retrieve was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SkillApi"
        ],
        "summary": "Delete a skill",
        "operationId": "DeleteSkill",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The skill was deleted"
          },
          "404": {
            "description": "The skill to delete was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SkillApi"
        ],
        "summary": "Update a skill",
        "operationId": "UpdateSkill",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SkillDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SkillDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SkillDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The skill was successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkillDto"
                }
              }
            }
          },
          "404": {
            "description": "The skill to update was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionModel"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ContactDto": {
        "required": [
          "address",
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "mobilePhoneNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiExceptionModel": {
        "type": "object",
        "properties": {
          "errorId": {
            "type": "string",
            "format": "uuid"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "stackTrace": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SkillDto": {
        "required": [
          "level",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "level": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "NewUserDto": {
        "required": [
          "email",
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LoginDto": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "JwtDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "expireTo": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme (Example: 'Bearer 12345abcdef')",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}